
package PopGenetics;

import java.awt.Dimension;
import java.awt.Point;

import view.modeling.ViewableAtomic;
import view.modeling.ViewableComponent;
import view.modeling.ViewableDigraph;

public class PopulationGenetics extends ViewableDigraph {

	public PopulationGenetics() {
		super("PopGenetics");

		ViewableAtomic Fitness = new Fitness("Fitness");
		ViewableAtomic Generator = new Generator("Generator", 0, 0.1, 1, 0.00, "0_0.1_1_0.0"); // delta_theta, p_crossover, selective_pressure, p_mutate
		ViewableAtomic Transducer = new Transducer("Transducer", 100, "default"); // second argument is # of generations
		ViewableAtomic Crossover = new Crossover("Crossover", 0.1, 1); // second argument is probability of crossing over; third is selective pressure
		ViewableAtomic Mutator = new Mutator("Mutator", 0.00); // second argument is the probability of mutation

		add(Fitness);
		add(Generator);
		add(Transducer);
		add(Crossover);
		add(Mutator);

		addOutport("out_population");

		addCoupling(Generator, "out_population", Fitness, "in_population");
		addCoupling(Generator, "delta_theta", Fitness, "delta_theta");
		addCoupling(Generator, "p_crossover", Crossover, "p_crossover");
		addCoupling(Generator, "selective_pressure", Crossover, "selective_pressure");
		addCoupling(Generator, "p_mutate", Mutator, "p_mutate");
		addCoupling(Generator, "filename", Transducer, "filename");
		
		addCoupling(Fitness, "out_population", Transducer, "in_population");
		addCoupling(Fitness, "out_population", Crossover, "in_population");
		addCoupling(Crossover, "out_population", Mutator, "in_population");
		addCoupling(Mutator, "out_population", Fitness, "in_population");
		
		addCoupling(Transducer, "stop", Fitness, "stop");
		
		addCoupling(Transducer, "out_population", this, "out_population");
	}

    /**
     * Automatically generated by the SimView program.
     * Do not edit this manually, as such changes will get overwritten.
     */
    public void layoutForSimView()
    {
        preferredSize = new Dimension(591, 313);
        ((ViewableComponent)withName("Generator")).setPreferredLocation(new Point(7, 12));
        ((ViewableComponent)withName("Crossover")).setPreferredLocation(new Point(24, 157));
        ((ViewableComponent)withName("Transducer")).setPreferredLocation(new Point(249, 187));
        ((ViewableComponent)withName("Fitness")).setPreferredLocation(new Point(256, 22));
        ((ViewableComponent)withName("Mutator")).setPreferredLocation(new Point(125, 85));
    }
}
